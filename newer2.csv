,index,language,proj_id,file_id,file_body
1511,1512,Python,10753,101513,"def div_check(x, y):
  try:
    x / y
  except ZeroDivisionError:
    return True
  else:
    return False
"
1883,1884,Python,10931,101885,"def heapsort(lst):
  ''' Heapsort. Note: this function sorts in-place (it mutates the list). '''

  # in pseudo-code, heapify only called once, so inline it here
  for start in range((len(lst)-2)/2, -1, -1):
    siftdown(lst, start, len(lst)-1)

  for end in range(len(lst)-1, 0, -1):
    lst[end], lst[0] = lst[0], lst[end]
    siftdown(lst, 0, end - 1)
  return lst

def siftdown(lst, start, end):
  root = start
  while True:
    child = root * 2 + 1
    if child > end: break
    if child + 1 <= end and lst[child] < lst[child + 1]:
      child += 1
    if lst[root] < lst[child]:
      lst[root], lst[child] = lst[child], lst[root]
      root = child
    else:
      break
"
8854,8855,Go,15207,108856,"fmt.Println(strings.Repeat(string('h'), 5)) // prints hhhhh
"
9023,9024,Go,15326,109025,"package main

import (
    ""fmt""
    ""unicode/utf8""
)

func main() {
    m := ""møøse""
    u := ""𝔘𝔫𝔦𝔠𝔬𝔡𝔢""
    j := ""J̲o̲s̲é̲""
    fmt.Printf(""%d %s %x\n"", utf8.RuneCountInString(m), m, []rune(m))
    fmt.Printf(""%d %s %x\n"", utf8.RuneCountInString(u), u, []rune(u))
    fmt.Printf(""%d %s %x\n"", utf8.RuneCountInString(j), j, []rune(j))
}
"
2207,2208,Python,11082,102209,"import subprocess
px = subprocess.Popen(['python', '-c', 'import calendar; calendar.prcal(1969)'],
                      stdout=subprocess.PIPE)
cal = px.communicate()[0]
print cal.upper()
"
